# Ultralytics YOLO 🚀, AGPL-3.0 라이선스
# P2-P5 출력을 가진 YOLOv8 객체 탐지 모델. 사용 예시는 https://docs.ultralytics.com/tasks/detect에서 확인 가능

# 매개변수
nc: 1 # 클래스 수 (탐지할 객체의 종류)
scales: # 모델의 복합 스케일링 상수, 예를 들어 'model=yolov8n.yaml'은 scale 'n'을 사용하는 yolov8.yaml을 호출함
  # [깊이, 너비, 최대 채널 수]
  n: [0.33, 0.25, 1024]
  s: [0.33, 0.50, 1024]
  m: [0.67, 0.75, 768]
  l: [1.00, 1.00, 512]
  x: [1.00, 1.25, 512]

# YOLOv8.0 백본 (backbone)
backbone:
  # [이전 출력, 반복 횟수, 모듈, 인자]
  - [-1, 1, Conv, [64, 3, 2]] # 0-P1/2 (첫 번째 레이어, P1 출력)
  - [-1, 1, Conv, [128, 3, 2]] # 1-P2/4 (P2 출력)
  - [-1, 3, C2f, [128, True]]  # C2f 모듈 사용
  - [-1, 1, Conv, [256, 3, 2]] # 3-P3/8 (P3 출력)
  - [-1, 6, C2f, [256, True]]  # 반복된 C2f 모듈
  - [-1, 1, Conv, [512, 3, 2]] # 5-P4/16 (P4 출력)
  - [-1, 6, C2f, [512, True]]  # 더 깊은 레이어
  - [-1, 1, Conv, [1024, 3, 2]] # 7-P5/32 (P5 출력)
  - [-1, 3, C2f, [1024, True]]  # 마지막 C2f 모듈
  - [-1, 1, SPPF, [1024, 5]] # 9 (SPPF 모듈 사용)

# YOLOv8.0-P2 헤드 (head)
head:
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]  # 업샘플링 (출력을 2배 확대)
  - [[-1, 6], 1, Concat, [1]] # P4와 결합 (Concat)
  - [-1, 3, C2f, [512]] # C2f 모듈 사용 (P4 출력)

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]  # 다시 업샘플링
  - [[-1, 4], 1, Concat, [1]] # P3와 결합 (Concat)
  - [-1, 3, C2f, [256]] # P3/8 (소형 객체 탐지)

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]  # 또 업샘플링
  - [[-1, 2], 1, Concat, [1]] # P2와 결합 (Concat)
  - [-1, 3, C2f, [128]] # P2/4 (초소형 객체 탐지)

  - [-1, 1, Conv, [128, 3, 2]]  # 다운샘플링
  - [[-1, 15], 1, Concat, [1]] # 다시 P3와 결합
  - [-1, 3, C2f, [256]] # P3/8 (소형)

  - [-1, 1, Conv, [256, 3, 2]]  # 또 다운샘플링
  - [[-1, 12], 1, Concat, [1]] # P4와 결합
  - [-1, 3, C2f, [512]] # P4/16 (중형 객체 탐지)

  - [-1, 1, Conv, [512, 3, 2]]  # 다시 다운샘플링
  - [[-1, 9], 1, Concat, [1]] # P5와 결합
  - [-1, 3, C2f, [1024]] # P5/32 (대형 객체 탐지)

  - [[18, 21, 24, 27], 1, Detect, [nc]] # 탐지 (P2, P3, P4, P5 레이어들에서 객체 탐지)
